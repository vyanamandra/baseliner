---
# tasks file for vm-ec2

- name: Create the output/utils/vm-ec2-{{ DC_NORM }} directory
  ansible.builtin.file:
    path: 'output/utils/vm-ec2-{{ DC_NORM }}'
    state: directory

- name: Fill and place utils/vm-ec2-{{ DC_NORM }}/create_machines.tf in output/utils/vm-ec2-{{ DC_NORM }}
  ansible.builtin.template:
    src: 'create_machines.tf'
    dest: 'output/utils/vm-ec2-{{ DC_NORM }}'
    mode: '0644'
  when: CONSUL_VM_EC2_PROVISION | bool

- name: Run Terraform to provision the new nodes.
  terraform:
    project_path: 'output/utils/vm-ec2-{{ DC_NORM }}'
    force_init: true
    state: present

- name: Execute Python Script using the shell module
  ansible.builtin.shell:
    cmd: python utils/scripts/add_ec2_to_config.py -d {{ DC_NORM }} -i {{ playbook_dir }}/inventory/hosts -l output/utils/vm-ec2-{{ DC_NORM }} -s {{ CONSUL_VM_EC2_SERVER_COUNT }} -c {{ CONSUL_VM_EC2_CLIENT_COUNT }} -t {{ DC_ROLE }} -k {{ CONSUL_VM_EC2_SSH_PRIV_KEY_FILE }}
  when: CONSUL_VM_EC2_PROVISION | bool

- meta: refresh_inventory

#- name: Print list of hosts
#  ansible.builtin.debug:
#    var: "{{ item }}"
#  with_items: "{{ groups['venus_dc_vm_ec2_nodes'] }}"
#    
##                host={{ item }}
#- name: Wait for SSH to come up on the newly created EC2 nodes
#  local_action: wait_for
#                host="54.185.160.71"
#                port=22
#                state=started
#  with_items: "{{ groups['venus_dc_vm_ec2_nodes'] }}"
#  when: CONSUL_VM_EC2_CREATE_NODES | bool
